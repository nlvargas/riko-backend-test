# Generated by Django 3.0.8 on 2020-11-21 02:59

from django.conf import settings
import django.contrib.auth.models
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=60)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=60)),
                ('password', models.CharField(blank=True, max_length=200)),
                ('isChef', models.BooleanField(default=False)),
                ('card', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('addresses', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('profileImage', models.ImageField(blank=True, default=None, null=True, upload_to='profile/')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, default=None, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, default=None, max_digits=9, null=True)),
                ('stripeId', models.CharField(blank=True, max_length=300)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=60)),
                ('description', models.CharField(blank=True, max_length=300)),
                ('cookingTime', models.IntegerField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('image', models.ImageField(blank=True, upload_to='backend/uploads/dishes/')),
                ('isAvailable', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='FoodType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300)),
                ('name_en_us', models.CharField(blank=True, max_length=300, null=True)),
                ('name_fr', models.CharField(blank=True, max_length=300, null=True)),
                ('name_es', models.CharField(blank=True, max_length=300, null=True)),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to='api/foodType/')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('orderID', models.UUIDField(editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('delivered', 'delivered'), ('on-the-way', 'on-the-way'), ('delayed', 'delayed'), ('pending', 'pending'), ('ready-to-pick-up', 'ready-to-pick-up'), ('confirmed', 'confirmed'), ('rejected', 'rejected')], default='pending', max_length=25)),
                ('total', models.DecimalField(decimal_places=2, max_digits=8)),
                ('deliverDate', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('address', django.contrib.postgres.fields.jsonb.JSONField(blank=True)),
                ('comment', models.CharField(blank=True, max_length=300)),
                ('currency', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('paymentMethod', models.CharField(choices=[('card', 'card'), ('cash', 'cash')], default='cash', max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=60)),
                ('description', models.CharField(blank=True, max_length=300)),
                ('openingTime', models.CharField(blank=True, max_length=10)),
                ('closingTime', models.CharField(blank=True, max_length=10)),
                ('offersDelivery', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('address', models.CharField(blank=True, max_length=200)),
                ('isAvailable', models.BooleanField(default=True)),
                ('isAvailableToday', models.BooleanField(default=True)),
                ('totalAcceptanceTime', models.FloatField(default=0.0)),
                ('totalRejections', models.IntegerField(default=0)),
                ('chef', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chef', to=settings.AUTH_USER_MODEL)),
                ('coverDish', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coverDish', to='api.Dish')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=300)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('rate', models.DecimalField(decimal_places=1, default=5, max_digits=2)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='api.Order')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='api.Restaurant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderDish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField()),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='api.Dish')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='api.Order')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='api.Restaurant'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actor', models.CharField(max_length=50)),
                ('verb', models.CharField(max_length=50)),
                ('action', models.CharField(blank=True, max_length=50)),
                ('target', models.CharField(choices=[('1', 'User'), ('2', 'Chef')], default='1', max_length=1)),
                ('description', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('isRead', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='dish',
            name='foodType',
            field=models.ManyToManyField(blank=True, related_name='dishes', to='api.FoodType'),
        ),
        migrations.AddField(
            model_name='dish',
            name='restaurant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dishes', to='api.Restaurant'),
        ),
        migrations.AddField(
            model_name='user',
            name='favoriteDishes',
            field=models.ManyToManyField(blank=True, to='api.Dish'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
